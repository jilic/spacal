
#include "PrimaryGeneratorAction.hh"

#include "DetectorConstruction.hh"
#include "PrimaryGeneratorMessenger.hh"

#include "G4RunManager.hh"
#include "G4Event.hh"
#include "G4ParticleGun.hh"
#include "G4ParticleTable.hh"
#include "G4ParticleDefinition.hh"
#include "G4SystemOfUnits.hh"
#include "Randomize.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
PrimaryGeneratorAction::PrimaryGeneratorAction(DetectorConstruction* myDC):
	myDetector(myDC)
{
	G4int n_particle = 1;
	particleGun  = new G4ParticleGun(n_particle);
	gunMessenger = new PrimaryGeneratorMessenger(this);
	
	// default particle kinematic
	G4ParticleTable* particleTable = G4ParticleTable::GetParticleTable();
	G4String particleName;
	G4ParticleDefinition* particle= particleTable->FindParticle(particleName="e-");
	particleGun->SetParticleDefinition(particle);


	double alfa = 3.0*pi/180.0;
	G4double position = -100.0 - myDetector->GetCaloZ();

	//gun position	
	particleGun->SetParticlePosition(G4ThreeVector(0.*cm, position* std::tan(alfa), position));
	
	//momentum direction	
	particleGun->SetParticleMomentumDirection(G4ThreeVector(0.,std::tan(alfa),1.));
	
	particleGun->SetParticleEnergy(200.0 *MeV);

	rndmFlag = "off";
}
//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
PrimaryGeneratorAction::~PrimaryGeneratorAction()
{
  delete particleGun;
  delete gunMessenger;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......


void PrimaryGeneratorAction::GeneratePrimaries(G4Event* anEvent)
{

	particleGun->GeneratePrimaryVertex(anEvent);
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

